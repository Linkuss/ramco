from django import forms
from django.contrib.auth.forms import UserCreationForm
from django.template.loader import get_template
from django.template import Context
from django.http import HttpResponse, HttpResponseRedirect
from django.contrib import auth
from forms import SubmitForm
from django.shortcuts import render_to_response
from django.template import RequestContext
from django.core.context_processors import csrf
from django.contrib.auth.models import User
from django.core.mail import send_mail
from models import Profile
from models import Submission
import datetime
import forms
from django.views.decorators.csrf import csrf_exempt



__author__ = 'vince'

def index(request):
    t = get_template('index.html')
    html = t.render(Context())
    return HttpResponse(html)

def login(request):
    username = request.POST.get('username', '')
    password = request.POST.get('password', '')
    user = auth.authenticate(username=username, password=password)
    if user is not None and user.is_active:
        # Correct password, and the user is marked "active"
        auth.login(request, user)
        # Redirect to a success page.
        return HttpResponseRedirect("/loggedin/")
        #welcome page with args
    else:
        # Show an error page
        return HttpResponseRedirect("/account/invalid/")
        #on login page again
     
     
@csrf_exempt   
def submit(request):
    if request.method == 'POST':
        form = SubmitForm(request.POST)
        if not form.is_valid():
            return render_to_response("submitCode.html", {'form' : form})
        tit = str(form['title'].value())
        desc = str(form['description'].value())
        co = str(form['code'].value())
        lang = form['language'].value()
        #us = request.user
        sub = Submission(title=tit, code=co, description=desc, language='Java', user=request.user)
        sub.save()
        return render_to_response("submitCode.html", {'form' : form})
    else:
        form = SubmitForm() # An unbound form
        return render_to_response('submitCode.html', {'form' : form})


def register(request):
    if request.method == 'POST':
        form = forms.UserCreateForm(request.POST)
        if error_register(request) or not form.is_valid():
            c = {}
            c.update(csrf(request))
            c['repetir'] = True
            c['header'] = "register"
            return render_to_response('signup.html', c, context_instance=RequestContext(request, {'form': form}))
        else:
            username = request.POST['username']
            email = request.POST['email']
            password = request.POST['password1']
            user = User.objects.create_user(username, email, password)
            user.is_active = False
            user.save()
            confirmation_code = ''.join("test")
            p = Profile(user=user, confirmation_code=confirmation_code)
            p.save()
            send_registration_confirmation(user)
            return HttpResponseRedirect('/login/')
    else:
        form = forms.UserCreateForm()
        return render_to_response('signup.html', form, context_instance=RequestContext(request, {'form': form}))


def send_registration_confirmation(user):
    p = user.get_profile()
    title = "Gsick account confirmation"
    content = "http://www.gsick.com/confirm/" + str(p.confirmation_code) + "/" + user.username
    send_mail(title, content, 'no-reply@gsick.com', [user.email], fail_silently=False)


def confirm(request, confirmation_code, username):
    try:
        user = User.objects.get(username=username)
        profile = user.get_profile()
        if profile.confirmation_code == confirmation_code and user.date_joined > (
            datetime.datetime.now() - datetime.timedelta(days=1)):
            user.is_active = True
            user.save()
            user.backend = 'django.contrib.auth.backends.ModelBackend'
            user.auth_login(request, user)
        return HttpResponseRedirect('')
    except:
        return HttpResponseRedirect('/singup/')


def error_register(request):
    username = request.POST['username']
    password = request.POST['password1']
    email = request.POST['email']
    if username.replace(" ", "") == "" or password.replace(" ", "") == "":
        return True
    if len(username) > 15 or len(password) > 50:
        return True
    if not "@" in email:
        return True
    try:
        if User.objects.get(username=username):
            return True
    except:
        pass